import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import pool from './database/db.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

async function initDatabase() {
  const client = await pool.connect();
  
  try {
    console.log('üöÄ Starting database initialization...');
    
    // –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Å—Ö–µ–º—É
    console.log('üìù Creating database schema...');
    const schemaSQL = readFileSync(join(__dirname, 'database', 'schema.sql'), 'utf-8');
    await client.query(schemaSQL);
    console.log('‚úÖ Schema created successfully');
    
    // –ß–∏—Ç–∞–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üìù Seeding initial data...');
    const seedSQL = readFileSync(join(__dirname, 'database', 'seed.sql'), 'utf-8');
    await client.query(seedSQL);
    console.log('‚úÖ Initial data seeded successfully');
    
    console.log('üéâ Database initialization completed!');
  } catch (error) {
    console.error('‚ùå Error initializing database:', error);
    throw error;
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initDatabase().catch(console.error);

